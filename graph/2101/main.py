#!/usr/bin/env python
# coding=utf-8
# ============================================================
# https://leetcode.cn/problems/detonate-the-maximum-bombs/description/?envType=daily-question&envId=2024-07-22
# ============================================================

"""
给你一个炸弹列表。一个炸弹的 爆炸范围 定义为以炸弹为圆心的一个圆。

炸弹用一个下标从 0 开始的二维整数数组 bombs 表示，其中
bombs[i] = [xi, yi, ri] 。xi 和 yi 表示第 i 个炸弹
的 X 和 Y 坐标，ri 表示爆炸范围的 半径 。

你需要选择引爆 一个 炸弹。当这个炸弹被引爆时，所有 在它爆炸
范围内的炸弹都会被引爆，这些炸弹会进一步将它们爆炸范围内的其他炸弹引爆。

给你数组 bombs ，请你返回在引爆 一个 炸弹的前提下，最多 能引爆的炸弹数目。
"""

from my import Solution

if __name__ == '__main__':
    print(
        Solution().maximumDetonation([[2, 1, 3], [6, 1, 4]]), 2, '\n',
        Solution().maximumDetonation([[1, 1, 5], [10, 10, 5]]), 1, '\n',
        Solution().maximumDetonation([[1, 2, 3], [2, 3, 1], [3, 4, 2], [4, 5, 3], [5, 6, 4]]), 5, '\n',
        Solution().maximumDetonation(
            [[56, 80, 2], [55, 9, 10], [32, 75, 2], [87, 89, 1], [61, 94, 3], [43, 82, 9], [17, 100, 6], [50, 6, 7],
             [9, 66, 7], [98, 3, 6], [67, 50, 2], [79, 39, 5], [92, 60, 10], [49, 9, 9], [42, 32, 10]]), 3, '\n',
        Solution().maximumDetonation(
            [[9798, 6184, 3812], [1867, 3147, 5525], [5634, 4861, 9236], [1256, 6542, 9781], [4880, 4726, 5230],
             [9501, 1619, 9586], [6136, 6649, 2055], [5826, 9324, 3348], [8020, 1056, 1441], [934, 5831, 8221],
             [8807, 1361, 7949], [9024, 9400, 9315], [6527, 6, 8140], [4738, 7293, 1754], [4298, 3578, 8063],
             [2249, 1827, 6337], [4483, 8372, 566], [2914, 8000, 8840], [2513, 2558, 6330], [276, 3427, 6416],
             [1099, 6849, 3931], [5392, 7452, 1669], [8362, 5774, 9257], [9849, 4327, 1149], [966, 6032, 1957],
             [2515, 3974, 9854], [1359, 5434, 8189], [3133, 3826, 3516], [4864, 6677, 263], [7120, 8170, 8974],
             [1806, 5168, 8165], [5295, 3664, 6385], [9799, 6023, 538], [7662, 8764, 634], [8864, 3334, 4554],
             [8971, 2823, 3035], [4695, 7737, 4888], [8582, 618, 2448], [3295, 5076, 1510], [4133, 2755, 8454],
             [3227, 2431, 1960], [663, 179, 3037], [6367, 8569, 9053], [778, 7692, 2493], [374, 3830, 6231],
             [3915, 4920, 1978], [1084, 1897, 4571], [6543, 1901, 2130], [6610, 2520, 4480], [8561, 9318, 7285],
             [999, 3801, 8433], [5797, 6677, 4198], [6134, 174, 2684], [9055, 1275, 655], [7307, 5062, 2697],
             [7834, 2053, 1810], [1602, 5392, 5539], [1441, 4935, 6876], [8390, 2711, 4961], [597, 8756, 1319],
             [7087, 8444, 5459], [8792, 1509, 5399], [597, 1681, 4988], [8939, 8793, 3383], [1526, 5970, 6799],
             [8969, 1065, 9170], [7761, 6928, 5357], [2494, 5504, 3682], [8687, 6869, 1129], [1388, 2574, 5460],
             [2126, 913, 5156], [4805, 1548, 7430], [2460, 2897, 8177], [1032, 7204, 120], [9881, 3437, 1174],
             [1141, 7293, 5938], [7695, 2837, 3624], [2440, 8521, 8092], [1659, 2771, 1844], [4075, 3189, 1018],
             [7729, 9748, 2981], [262, 690, 2156], [4399, 4152, 1546], [6699, 4932, 5570], [9386, 9619, 2995],
             [5224, 7018, 695], [1354, 204, 5575], [1559, 1967, 4636], [7599, 9590, 9618], [4459, 5016, 8331],
             [7935, 9272, 9602], [6401, 7407, 4885], [5444, 4018, 2351], [128, 202, 2255], [3589, 1748, 219],
             [3605, 702, 5550], [6830, 4704, 2048], [1948, 8666, 4940], [4446, 6568, 6654], [8030, 1108, 9242]]), 100,
        '\n',
    )
